cmake_minimum_required(VERSION 3.21)
project(Machine_Learning C CXX)

set(USE_OPENCV TRUE)
set(USE_PYTORCH FALSE)
set(USE_CV_PLOT TRUE)

if(MSVC)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++17")
endif(MSVC)

file(GLOB SOURCES "src/*")
add_executable(ml ${SOURCES})

# Include the path of packages in main.cpp
include_directories("${CMAKE_CURRENT_SOURCE_DIR}/algorithms")
add_subdirectory ("${CMAKE_CURRENT_SOURCE_DIR}/algorithms")

include_directories("${CMAKE_CURRENT_SOURCE_DIR}/helper")

set_target_properties(ml PROPERTIES LINKER_LANGUAGE CXX)
target_link_libraries (ml PUBLIC  algorithms)

# Adding opencv
if (USE_OPENCV AND CMAKE_SYSTEM_NAME STREQUAL "Linux")
	include_directories(/usr/include/opencv4)
	find_package(OpenCV REQUIRED)
	include_directories(${OpenCV_INCLUDE_DIRS})
	target_link_libraries(ml PUBLIC ${OpenCV_LIBS})
elseif (USE_OPENCV AND CMAKE_SYSTEM_NAME STREQUAL "Windows")
	message("Adding Opencv")
	set(OPENCV_DIR "${CMAKE_SOURCE_DIR}/external_depenedencies/opencv")
	include_directories("${OPENCV_DIR}/include")
	link_directories("${OPENCV_DIR}/lib")
	#file(GLOB OPENCV_LIBRARIES "${OPENCV_DIR}/lib/*")
	file(GLOB OPENCV_LIBRARIES "${OPENCV_DIR}/lib/opencv_world412.lib")
	target_link_libraries(ml PUBLIC "${OPENCV_LIBRARIES}")
endif()

# Adding pytorch
if (USE_PYTORCH)
	message(Adding Pytorch)
	set(Torch_DIR "${CMAKE_SOURCE_DIR}/external_depenedencies/libtorch/share/cmake/Torch")
	find_package(Torch REQUIRED)
	target_link_libraries(ml "${TORCH_LIBRARIES}")
endif(USE_PYTORCH)

if (USE_CV_PLOT)
	include_directories("${CMAKE_SOURCE_DIR}/external_depenedencies/cv-plot-1.2.1/CvPlot/inc")
endif(USE_CV_PLOT)
